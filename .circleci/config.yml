version: 2.1

aliases:
  - &docker
    - image: node:12-buster-slim

  - &restore_yarn_cache
    restore_cache:
      name: Restore Yarn cache
      keys:
        - v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - v1-yarn-{{ .Branch }}-
        - v1-yarn-
  
  - &save_yarn_cache
    save_cache:
          name: Save Yarn cache
          key: v1-yarn--{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  - &yarn_install
    run:
      name: Install Node modules
      command: yarn --frozen-lockfile

jobs:
  build:
    docker: *docker

    steps:
      - checkout

      - run:
          name: Node.js version
          command: |
            node --version
            npm --version
            yarn --version
      - *restore_yarn_cache
      - *yarn_install
      - *save_yarn_cache
      - run:
          name: Create artifacts directory
          command: mkdir ~/artifacts

      - run:
          name: ESLint
          command: yarn lint --format="junit" --output-file="~/artifacts/test_results/eslint/eslint.xml"
          working_directory: packages/undercut
      - run:
          name: Jest
          command: |
            yarn test --ci --coverage --reporters="default" --reporters="jest-junit" --runInBand
            cp coverage/clover.xml ~/artifacts/coverage.xml
          working_directory: packages/undercut
          environment:
            JEST_JUNIT_OUTPUT_DIR: ~/artifacts/test_results/jest/
            JEST_JUNIT_OUTPUT_NAME: jest.xml
      - run:
          name: Package
          command: |
            npm pack
            cp undercut-*.tgz ~/artifacts/
          working_directory: packages/undercut

      - store_artifacts:
          path: ~/artifacts/
      - store_test_results:
          path: ~/artifacts/test_results/
      - codecov/upload:
          file: ~/artifacts/coverage.xml

orbs:
  codecov: codecov/codecov@1.0.5
