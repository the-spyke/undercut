version: 2.1

executors:
  node:
    docker:
      - image: node:14-buster
  node_10:
    docker:
      - image: node:10-buster

orbs:
  codecov: codecov/codecov@1.0.5

aliases:
  filter_gh_pages: &filter_gh_pages
    filters:
      branches:
        ignore:
          - gh-pages

commands:
  lint:
    description: Run ESLint.
    parameters:
      path:
        type: string
        default: .
    steps:
      - run:
          name: ESLint
          command: |
            cd << parameters.path >>
            mkdir -p $ARTIFACTS/test_results/eslint
            yarn lint --format="junit" --output-file="$ARTIFACTS/test_results/eslint/eslint.xml"
  test:
    description: Run Jest.
    parameters:
      path:
        type: string
        default: .
      coverage:
        type: boolean
        default: false
      script:
        type: string
        default: test
    steps:
      - run:
          name: Jest
          command: |
            cd << parameters.path >>
            export JEST_JUNIT_OUTPUT_DIR="$ARTIFACTS/test_results/jest"
            mkdir -p $JEST_JUNIT_OUTPUT_DIR
            yarn << parameters.script >> --ci <<# parameters.coverage >>--coverage<</ parameters.coverage >> --reporters="default" --reporters="jest-junit" --runInBand
          environment:
            JEST_JUNIT_OUTPUT_NAME: jest.xml
      - when:
          condition: << parameters.coverage >>
          steps:
            - run:
                name: Process coverage reports
                command: |
                  cp -v coverage/coverage-final.json $ARTIFACTS/coverage.json
                  tar -czvf $ARTIFACTS/coverage.tar.gz coverage/
            - codecov/upload:
                file: artifacts/coverage.json
  initialize:
    description: Initialize a JS project and create artifacts directory
    steps:
      - checkout
      - run:
          name: Node.js version
          command: |
            node --version
            npm --version
            yarn --version
      - restore_cache:
          name: Restore Yarn cache
          keys:
            - yarn-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Node modules
          command: yarn --frozen-lockfile
      - save_cache:
          name: Save Yarn cache
          key: yarn-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - /usr/local/share/.cache/yarn
      - run:
          name: Setup artifacts directory
          command: |
            ARTIFACTS="$(pwd)/artifacts"
            echo "export ARTIFACTS=\"${ARTIFACTS}\"" >> $BASH_ENV
            mkdir -p $ARTIFACTS
  finalize:
    description: Finalize a JS project build and upload its artifacts.
    parameters:
      persist:
        type: boolean
        default: true
    steps:
      - store_artifacts:
          path: artifacts
      - store_test_results:
          path: artifacts/test_results
      - when:
          condition: << parameters.persist >>
          steps:
            - persist_to_workspace:
                root: artifacts
                paths: "*.tgz"
  build:
    description: Build a JS project, run tests, compose a package, and do all other stuff.
    parameters:
      path:
        type: string
      test:
        type: boolean
        default: false
      coverage:
        type: boolean
        default: false
    steps:
      - initialize
      - run:
          name: Build
          command: |
            cd << parameters.path >>
            yarn build
      - when:
          condition: << parameters.test >>
          steps:
            - test:
                path: << parameters.path >>
                coverage: << parameters.coverage >>
      - run:
          name: Dist
          command: |
            cd << parameters.path >>
            yarn dist
            cp -v dist/* $ARTIFACTS
      - finalize

jobs:
  build_cli:
    executor: node_10
    steps:
      - build:
          path: packages/undercut-cli
          test: true

  build_node_10:
    executor: node_10
    steps:
      - build:
          path: packages/undercut-node-10
          test: true

  build_pull:
    executor: node
    steps:
      - build:
          path: packages/undercut-pull

  build_push:
    executor: node
    steps:
      - build:
          path: packages/undercut-push

  build_utils:
    executor: node
    steps:
      - build:
          path: packages/undercut-utils

  build_web_2019:
    executor: node
    steps:
      - build:
          path: packages/undercut-web-2019
          test: true

  build_website:
    executor: node
    steps:
      - build:
          path: website

  check_all:
    executor: node
    steps:
      - initialize
      - lint
      - test:
          coverage: true
      - finalize:
          persist: false

  packages:
    executor: node
    steps:
      - attach_workspace:
          at: packages
      - run:
          name: Pack all
          command: |
            mkdir artifacts
            tar -cv -f artifacts/packages.tar packages
      - store_artifacts:
          path: artifacts

workflows:
  version: 2
  workflow:
    jobs:
      - check_all:
          <<: *filter_gh_pages
      - build_pull:
          requires:
            - check_all
          <<: *filter_gh_pages
      - build_push:
          requires:
            - check_all
          <<: *filter_gh_pages
      - build_utils:
          requires:
            - check_all
          <<: *filter_gh_pages
      - build_node_10:
          requires:
            - build_pull
            - build_push
            - build_utils
          <<: *filter_gh_pages
      - build_cli:
          requires:
            - build_node_10
          <<: *filter_gh_pages
      - build_web_2019:
          requires:
            - build_pull
            - build_push
            - build_utils
          <<: *filter_gh_pages
      - build_website:
          requires:
            - check_all
          <<: *filter_gh_pages
      - packages:
          requires:
            - build_cli
            - build_web_2019
            - build_website
          <<: *filter_gh_pages
