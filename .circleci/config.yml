version: 2.1

aliases:
  - &docker
    - image: node:12-buster-slim

  - &restore_yarn_cache
    restore_cache:
      name: Restore Yarn cache
      keys:
        - v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - v1-yarn-{{ .Branch }}-
        - v1-yarn-
  
  - &save_yarn_cache
    save_cache:
          name: Save Yarn cache
          key: v1-yarn--{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  - &yarn_install
    run:
      name: Install Node modules
      command: yarn --frozen-lockfile

jobs:
  build:
    docker: *docker

    steps:
      - checkout

      - run:
          name: Node.js version
          command: |
            node --version
            npm --version
            yarn --version
      - *restore_yarn_cache
      - *yarn_install
      - *save_yarn_cache

      - run:
          command: yarn lint --format junit --output-file eslint.xml
          working_directory: packages/undercut
      - run:
          command: yarn test --ci --runInBand --coverage --reporters="default" --reporters="jest-junit"
          working_directory: packages/undercut
          environment:
            JEST_JUNIT_OUTPUT_NAME: jest.xml
      - run:
          command: npm pack
          working_directory: packages/undercut

      - run:
          name: Copy artifacts
          command: |
            mkdir -p artifacts
            cp packages/undercut/undercut-*.tgz artifacts/
            cp packages/undercut/coverage/clover.xml artifacts/coverage.xml

            mkdir -p artifacts/test-results/eslint
            cp packages/undercut/eslint.xml artifacts/test-results/eslint/
            mkdir -p artifacts/test-results/jest
            cp packages/undercut/jest.xml artifacts/test-results/jest/

      - store_artifacts:
          path: artifacts/
      - store_test_results:
          path: artifacts/test-results/
      - codecov/upload:
          file: artifacts/coverage.xml

orbs:
  codecov: codecov/codecov@1.0.5
